/**
 * @file mqtt_const.h
 * @author Pierre Biermann (https://github.com/ByteBender747)
 * @brief MQTT constant definitions
 * @version 0.1
 * @date 2025-07-02
 * 
 * @copyright Copyright (c) 2025
 * 
 */

#ifndef MQTT_CONST_H_INCLUDED
#define MQTT_CONST_H_INCLUDED

#define MQTT_PROTOCOL_VERSION   5

#ifndef MQTT_RECEIVE_MAXIMUM
#define MQTT_RECEIVE_MAXIMUM    32
#endif

#ifndef MQTT_CORELATION_DATA_MAXIMUM
#define MQTT_CORELATION_DATA_MAXIMUM 256
#endif

#ifndef MQTT_PORT
#define MQTT_PORT  1883
#endif

#ifndef MQTT_POLL_TIMEOUT
#define MQTT_POLL_TIMEOUT 250
#endif

typedef enum {
    UNKNOWN = 0,
    CONNECT = 1,
    CONNACK = 2,
    PUBLISH = 3,
    PUBACK = 4,
    PUBREC = 5,
    PUBREL = 6,
    PUBCOMP = 7,
    SUBSCRIBE = 8,
    SUBACK = 9,
    UNSUBSCRIBE = 10,
    UNSUBACK = 11,
    PINGREQ = 12,
    PINGRESP = 13,
    DISCONNECT = 14,
    AUTH = 15
} mqtt_packet_type;

enum mqtt_props {
    // MQTT Connect properties
    MQTT_CON_SESSION_EXPIRY_INTERVAL_ID = 0x11,
    MQTT_CON_RECEIVE_MAXIMUM_ID = 0x21,
    MQTT_CON_MAXIMUM_PACKET_SIZE_ID = 0x27,
    MQTT_CON_TOPIC_ALIAS_MAXIMUM_ID = 0x22,
    MQTT_CON_REQUEST_RESPONSE_INFO_ID = 0x19,
    MQTT_CON_REQUEST_PROBLEM_INF_ID = 0x17,
    MQTT_CON_AUTH_METHOD_ID = 0x15,
    MQTT_CON_AUTH_DATA_ID = 0x16,
    MQTT_CON_MAXIMUM_QOS_ID = 0x24,
    MQTT_CON_RETAIN_AVAILABLE_ID = 0x25,
    MQTT_CON_WILDCARD_SUBSCRIPTION_AVAILABLE_ID = 0x28, 
    MQTT_CON_SUBSCRIPTION_IDENTIFIER_AVAILABLE_ID = 0x29, 
    MQTT_CON_SHARED_SUBSCRIPTION_AVAILABLE_ID = 0x2A, 
    MQTT_CON_SERVER_KEEP_ALIVE_ID = 0x13, 
    MQTT_CON_RESPONSE_INFO_ID = 0x1A,

    // MQTT Connect acknowledged properties
    MQTT_ACK_SERVER_REFERENCE_ID = 0x1C,
    MQTT_ACK_ASSIGNED_CLIENT_ID = 0x12,
    MQTT_ACK_WILDCARD_SUB_AVAIL_ID = 0x28,
    MQTT_ACK_SUB_ID_AVAIL_ID = 0x29,
    MQTT_ACK_SHARED_SUB_AVAIL_ID = 0x2A,
    MQTT_ACK_SEVER_KEEP_ALIVE_ID = 0x13,

    // MQTT Will properties
    MQTT_WILL_DELAY_INTERVAL_ID = 0x18,
    MQTT_WILL_FORMAT_INDICATOR_ID = 0x01,
    MQTT_WILL_MSG_EXPIRY_INTERVAL_ID = 0x02,
    MQTT_WILL_CONTENT_TYPE_ID = 0x03,
    MQTT_WILL_RESPONSE_TOPIC_ID = 0x08,
    MQTT_WILL_CORELATION_DATA_ID = 0x09,
    MQTT_WILL_USER_PROPERTY_ID = 0x26,

    // MQTT Publish properties (also applies to Will properties for some)
    MQTT_PUB_PAYLOAD_FORMAT_INDICATOR_ID = 0x01,
    MQTT_PUB_MESSAGE_EXPIRY_INTERVAL_ID = 0x02,
    MQTT_PUB_CONTENT_TYPE_ID = 0x03,
    MQTT_PUB_RESPONSE_TOPIC_ID = 0x08,
    MQTT_PUB_CORRELATION_DATA_ID = 0x09,
    MQTT_PUB_SUBSCRIPTION_IDENTIFIER_ID = 0x0B, 
    MQTT_PUB_TOPIC_ALIAS_ID = 0x23, 
    MQTT_PUB_USER_PROPERTY_ID = 0x26,

    // MQTT Publish acknowledged properties
    MQTT_PUBACK_REASON_STRING_ID = 0x1f,

    // MQTT Pubrec properties
    MQTT_PUBREC_REASON_STRING_ID = 0x1f,

    // MQTT Pubrel properties
    MQTT_PUBREL_REASON_STRING_ID = 0x1f,

    // MQTT Pubcomp properties
    MQTT_PUBCOMP_REASON_STRING_ID = 0x1f,

    // MQTT Subscribe properties
    MQTT_SUB_SUBSCRIPTION_IDENTIFIER_ID = 0x0B,
    MQTT_SUB_USER_PROPERTY_ID = 0x26,

    // MQTT SubAck properties
    MQTT_SUBACK_REASON_STRING_ID = 0x1F, 
    MQTT_SUBACK_USER_PROPERTY_ID = 0x26, 

    // MQTT Unsubscribe properties
    MQTT_UNSUB_USER_PROPERTY_ID = 0x26, 

    // MQTT UnsubAck properties
    MQTT_UNSUBACK_REASON_STRING_ID = 0x1F, 
    MQTT_UNSUBACK_USER_PROPERTY_ID = 0x26, 

    // MQTT Disconnect properties
    MQTT_DISC_SESSION_EXPIRY_INTERVAL_ID = 0x11,
    MQTT_DISC_SERVER_REFERENCE_ID = 0x1C,
    MQTT_DISC_REASON_STRING_ID = 0x1F, 
    MQTT_DISC_USER_PROPERTY_ID = 0x26,

    // MQTT Auth properties
    MQTT_AUTH_METHOD_ID = 0x15,
    MQTT_AUTH_DATA_ID = 0x16,
    MQTT_AUTH_REASON_STRING_ID = 0x1F, 
    MQTT_AUTH_USER_PROPERTY_ID = 0x26, 

    // General Purpose Properties (can appear in multiple packets)
    MQTT_REASON_STRING_ID = 0x1F,
    MQTT_USER_PROPERTY_ID = 0x26,
};

typedef enum {
    MQTT_REASON_SUCCESS = 0x00,
    MQTT_REASON_NORMAL_DISCONNECTION = 0x00,
    MQTT_REASON_GRANTED_QOS_0 = 0x00,
    MQTT_REASON_GRANTED_QOS_1 = 0x01,
    MQTT_REASON_GRANTED_QOS_2 = 0x02,
    MQTT_REASON_DISCONNECT_WITH_WILL_MESSAGE = 0x04,
    MQTT_REASON_NO_MATCHING_SUBSCRIBERS = 0x10,
    MQTT_REASON_NO_SUBSCRIPTION_EXISTED = 0x11,
    MQTT_REASON_CONTINUE_AUTHENTICATION = 0x18,
    MQTT_REASON_RE_AUTHENTICATE = 0x19,
    MQTT_REASON_UNSPECIFIED_ERROR = 0x80,
    MQTT_REASON_MALFORMED_PACKET = 0x81,
    MQTT_REASON_PROTOCOL_ERROR = 0x82,
    MQTT_REASON_IMPLEMENTATION_SPECIFIC_ERROR = 0x83,
    MQTT_REASON_UNSUPPORTED_PROTOCOL_VERSION = 0x84,
    MQTT_REASON_CLIENT_IDENTIFIER_NOT_VALID = 0x85,
    MQTT_REASON_BAD_USER_NAME_OR_PASSWORD = 0x86,
    MQTT_REASON_NOT_AUTHORIZED = 0x87,
    MQTT_REASON_SERVER_UNAVAILABLE = 0x88,
    MQTT_REASON_SERVER_BUSY = 0x89,
    MQTT_REASON_BANNED = 0x8A,
    MQTT_REASON_SERVER_SHUTTING_DOWN = 0x8B,
    MQTT_REASON_BAD_AUTHENTICATION_METHOD = 0x8C,
    MQTT_REASON_KEEP_ALIVE_TIMEOUT = 0x8D,
    MQTT_REASON_SESSION_TAKEN_OVER = 0x8E,
    MQTT_REASON_TOPIC_FILTER_INVALID = 0x8F,
    MQTT_REASON_TOPIC_NAME_INVALID = 0x90,
    MQTT_REASON_PACKET_IDENTIFIER_IN_USE = 0x91,
    MQTT_REASON_PACKET_IDENTIFIER_NOT_FOUND = 0x92,
    MQTT_REASON_RECEIVE_MAXIMUM_EXCEEDED = 0x93,
    MQTT_REASON_TOPIC_ALIAS_INVALID = 0x94,
    MQTT_REASON_PACKET_TOO_LARGE = 0x95,
    MQTT_REASON_MESSAGE_RATE_TOO_HIGH = 0x96,
    MQTT_REASON_QUOTA_EXCEEDED = 0x97,
    MQTT_REASON_ADMINISTRATIVE_ACTION = 0x98,
    MQTT_REASON_PAYLOAD_FORMAT_INVALID = 0x99,
    MQTT_REASON_RETAIN_NOT_SUPPORTED = 0x9A,
    MQTT_REASON_QOS_NOT_SUPPORTED = 0x9B,
    MQTT_REASON_USE_ANOTHER_SERVER = 0x9C,
    MQTT_REASON_SERVER_MOVED = 0x9D,
    MQTT_REASON_SHARED_SUBSCRIPTIONS_NOT_SUPPORTED = 0x9E,
    MQTT_REASON_CONNECTION_RATE_EXCEEDED = 0x9F,
    MQTT_REASON_MAXIMUM_CONNECT_TIME = 0xA0,
    MQTT_REASON_SUBSCRIPTION_IDENTIFIERS_NOT_SUPPORTED = 0xA1,
    MQTT_REASON_WILDCARD_SUBSCRIPTIONS_NOT_SUPPORTED = 0xA2
} mqtt_reason_code;

#endif /* MQTT_CONST_H_INCLUDED */